"""
ÂêØÂä®Èù¢ÊùøstartÂëΩ‰ª§ ËøîÂõûÈù¢ban

+ myinfo ‰∏™‰∫∫Êï∞ÊçÆ
+ count  ÊúçÂä°Âô®Â™í‰ΩìÊï∞
"""
import asyncio
from pyrogram import filters

from bot.func_helper.emby import Embyservice
from bot.func_helper.utils import judge_admins, members_info, open_check
from bot.modules.commands.exchange import rgs_code
from bot.sql_helper.sql_emby import sql_add_emby
from bot.func_helper.filters import user_in_group_filter, user_in_group_on_filter
from bot.func_helper.msg_utils import deleteMessage, sendMessage, sendPhoto, callAnswer, editMessage
from bot.func_helper.fix_bottons import group_f, judge_start_ikb, judge_group_ikb, cr_kk_ikb
from bot.modules.extra import user_cha_ip
from bot import bot, prefixes, group, bot_photo, ranks, sakura_b


# ÂèçÂëΩ‰ª§ÊèêÁ§∫
@bot.on_message((filters.command('start', prefixes) | filters.command('count', prefixes)) & filters.chat(group))
async def ui_g_command(_, msg):
    await asyncio.gather(deleteMessage(msg),
                         sendMessage(msg,
                                     f"(ÔΩ°‚ô•‚Äø‚ô•ÔΩ°) ‰∫≤Áà±ÁöÑ‰∏ª‰∫∫ÔΩûËøô‰∏™Êåá‰ª§ÈúÄË¶ÅÁßÅËÅäÊòüÁÅµÊâçËÉΩ‰ΩøÁî®Âì¶ÔºÅ\n\n‚ú® ËØ∑ÁÇπÂáªÊú∫Âô®‰∫∫Â§¥ÂÉèÊàñÂèëÈÄÅ /start ÂºÄÂßã‰Ω†ÁöÑÊòüÈôÖÂÜíÈô©ÂêßÔºÅ",
                                     buttons=group_f, timer=60))


# Êü•ÁúãËá™Â∑±ÁöÑ‰ø°ÊÅØ
@bot.on_message(filters.command('myinfo', prefixes) & user_in_group_on_filter)
async def my_info(_, msg):
    await msg.delete()
    if msg.sender_chat:
        return
    text, keyboard = await cr_kk_ikb(uid=msg.from_user.id, first=msg.from_user.first_name)
    await sendMessage(msg, text, timer=60)


@bot.on_message(filters.command('count', prefixes) & user_in_group_on_filter & filters.private)
async def count_info(_, msg):
    await deleteMessage(msg)
    text = Embyservice.get_medias_count()
    await sendMessage(msg, text, timer=60)


# ÁßÅËÅäÂºÄÂêØÈù¢Êùø
@bot.on_message(filters.command('start', prefixes) & filters.private)
async def p_start(_, msg):
    if not await user_in_group_filter(_, msg):
        return await asyncio.gather(deleteMessage(msg),
                                    sendMessage(msg,
                                                '(‚ï•Ôπè‚ï•) ÂëúÂëúÂëúÔΩûÊ£ÄÊµãÂà∞‰Ω†ËøòÊ≤°ÊúâÂä†ÂÖ•Êàë‰ª¨ÁöÑÊòüÈôÖÂ§ßÂÆ∂Â∫≠ÔºÅ\n\nüíñ **ÈúÄË¶ÅÂÖàÂÅöËøô‰∫õÊâçËÉΩ‰ΩøÁî®ÊòüÁÅµÊúçÂä°Âì¶Ôºö**\n'
                                                'üåü 1. Âä†ÂÖ•Êàë‰ª¨ÁöÑ **Áæ§ÁªÑ** (Êó•Â∏∏‰∫§ÊµÅ)\n'
                                                'üåü 2. ÂÖ≥Ê≥®Êàë‰ª¨ÁöÑ **È¢ëÈÅì** (ÈáçË¶ÅÈÄöÁü•)\n\n'
                                                '‚ú® Âä†ÂÖ•ÂêéÂÜçÊù•ÊâæÊòüÁÅµÔºåÊàë‰ºö‰∏∫‰Ω†ÂºÄÂêØ‰∏ìÂ±ûÁöÑÊòüÈôÖË¥¶Êà∑ÔΩû(‡πë‚Ä¢ÃÄ„ÖÇ‚Ä¢ÃÅ)Ÿà‚úß',
                                                buttons=judge_group_ikb))
    try:
        u = msg.command[1].split('-')[0]
        if u == 'userip':
            name = msg.command[1].split('-')[1]
            if judge_admins(msg.from_user.id):
                return await user_cha_ip(_, msg, name)
            else:
                return await sendMessage(msg, '(ÔΩ°>Ôπè<ÔΩ°) ÂëÄÔΩû‰Ω†‰∏çÊòØÁÆ°ÁêÜÂëòÔºåÊó†Ê≥ï‰ΩøÁî®Ê≠§Êåá‰ª§Âì¶ÔºÅ')
        if u in f'{ranks.logo}' or u == str(msg.from_user.id):
            await asyncio.gather(msg.delete(), rgs_code(_, msg, register_code=msg.command[1]))
        else:
            await asyncio.gather(sendMessage(msg, '(¬¥‚äôœâ‚äô`) Âí¶ÔºüËøô‰∏™Ê≥®ÂÜåÁ†ÅÂ•ΩÂÉèÊúâÈóÆÈ¢òËØ∂ÔΩû\n\nËØ∑Ê£ÄÊü•ÊòØ‰∏çÊòØ‰ªéÂÆòÊñπÊ∏†ÈÅìËé∑ÂèñÁöÑÊ≠£Á°ÆÊòüÁ¨¶Âì¶ÔºÅ'), msg.delete())
    except (IndexError, TypeError):
        data = await members_info(tg=msg.from_user.id)
        is_admin = judge_admins(msg.from_user.id)
        if not data:
            sql_add_emby(msg.from_user.id)
            await asyncio.gather(deleteMessage(msg),
                                 sendPhoto(msg, bot_photo,
                                           f"**‚ú® ÂàùÊ¨°Áõ∏ÈÅáÔºåÂëΩËøêÁöÑÊòüÂÖâÂºÄÂßãÈó™ËÄÄÔΩû**\n\n"
                                           f"(‚óï‚Äø‚óï)‚ô° **‰Ω†Â•ΩÂëÄÔºåÊñ∞ÁöÑÂÜíÈô©ËÄÖÔºÅ**\n\n"
                                           f"üåü ÊòüÁÅµÂ∑≤‰∏∫‰Ω†ÂàõÂª∫‰∏ìÂ±ûÊ°£Ê°àÔºåÊòüÈôÖÊóÖÁ®ãÂç≥Â∞ÜÂºÄÂßãÔºÅ\n"
                                           f"üí´ ËØ∑ÂÜçÊ¨°ÂèëÈÄÅ /start Êù•ÊâìÂºÄ‰Ω†ÁöÑÂÜíÈô©ËÄÖÈù¢ÊùøÂêßÔΩû"))
            return
        name, lv, ex, us, embyid, pwd2 = data
        stat, all_user, tem, timing = await open_check()
        text = (f"‚úßŸ©(ÀäœâÀã*)Ÿà‚úß **ÊòüÁÅµÊéßÂà∂‰∏≠ÂøÉ**\n\n"
               f"**üÜî ÂÜíÈô©ËÄÖÁºñÂè∑** | `{msg.from_user.id}`\n" \
               f"**‚≠ê ÂΩìÂâçÊòüÁ∫ß** | {lv}\n"
               f"**üí∞ ÊòüÂ∞ò‰ΩôÈ¢ù** | {us}\n"
               f"**üé™ Ê≥®ÂÜåÁä∂ÊÄÅ** | {stat}\n"
               f"**üë• ÊÄªÂ∏≠‰ΩçÊï∞** | {all_user}\n"
               f"**üé´ Ââ©‰ΩôÂ∏≠‰Ωç** | {all_user - tem}\n")
        if not embyid:
            await asyncio.gather(deleteMessage(msg),
                                 sendPhoto(msg, bot_photo, caption=text, buttons=judge_start_ikb(is_admin, False)))
        else:
            await asyncio.gather(deleteMessage(msg),
                                 sendPhoto(msg, bot_photo,
                                           f"**‚ú® ÊòüÁÅµÊÑüÂ∫îÂà∞‰∫ÜÁÜüÊÇâÁöÑÊ∞îÊÅØÔΩû**\n\n(ÔΩ°‚ô•‚Äø‚ô•ÔΩ°) **Ê¨¢ËøéÂõûÊù•ÔºåÊàëÁöÑÂÜíÈô©ËÄÖÔºÅ**\n\nüíñ ËØ∑ÈÄâÊã©‰Ω†ÊÉ≥Ë¶ÅÁöÑÊòüÁÅµÊúçÂä°ÂêßÔΩû",
                                           buttons=judge_start_ikb(is_admin, True)))


# ËøîÂõûÈù¢Êùø
@bot.on_callback_query(filters.regex('back_start'))
async def b_start(_, call):
    if await user_in_group_filter(_, call):
        is_admin = judge_admins(call.from_user.id)
        await asyncio.gather(callAnswer(call, "‚≠ê ËøîÂõûÊòüÊ∏Ø"),
                             editMessage(call,
                                         text=f"**‚ú® ÊòüÁÅµÊÑüÂ∫îÂà∞‰∫ÜÁÜüÊÇâÁöÑÊ∞îÊÅØÔΩû**\n\n(ÔΩ°‚ô•‚Äø‚ô•ÔΩ°) **Ê¨¢ËøéÂõûÊù•ÔºåÊàëÁöÑÂÜíÈô©ËÄÖÔºÅ**\n\nüíñ ËØ∑ÈÄâÊã©‰Ω†ÊÉ≥Ë¶ÅÁöÑÊòüÁÅµÊúçÂä°ÂêßÔΩû",
                                         buttons=judge_start_ikb(is_admin, account=True)))
    elif not await user_in_group_filter(_, call):
        await asyncio.gather(callAnswer(call, "‚≠ê ËøîÂõûÊòüÊ∏Ø"),
                             editMessage(call, text='(‚ï•Ôπè‚ï•) ÂëúÂëúÂëúÔΩûÊ£ÄÊµãÂà∞‰Ω†ËøòÊ≤°ÊúâÂä†ÂÖ•Êàë‰ª¨ÁöÑÊòüÈôÖÂ§ßÂÆ∂Â∫≠ÔºÅ\n\nüíñ **ÈúÄË¶ÅÂÖàÂÅöËøô‰∫õÊâçËÉΩ‰ΩøÁî®ÊòüÁÅµÊúçÂä°Âì¶Ôºö**\n'
                                                  'üåü 1. Âä†ÂÖ•Êàë‰ª¨ÁöÑ **Áæ§ÁªÑ** (Êó•Â∏∏‰∫§ÊµÅ)\n'
                                                  'üåü 2. ÂÖ≥Ê≥®Êàë‰ª¨ÁöÑ **È¢ëÈÅì** (ÈáçË¶ÅÈÄöÁü•)\n\n'
                                                  '‚ú® Âä†ÂÖ•ÂêéÂÜçÊù•ÊâæÊòüÁÅµÔºåÊàë‰ºö‰∏∫‰Ω†ÂºÄÂêØ‰∏ìÂ±ûÁöÑÊòüÈôÖË¥¶Êà∑ÔΩû(‡πë‚Ä¢ÃÄ„ÖÇ‚Ä¢ÃÅ)Ÿà‚úß',
                                         buttons=judge_group_ikb))


@bot.on_callback_query(filters.regex('store_all'))
async def store_alls(_, call):
    if not await user_in_group_filter(_, call):
        await asyncio.gather(callAnswer(call, "‚≠ê ËøîÂõûÊòüÊ∏Ø"),
                             deleteMessage(call), sendPhoto(call, bot_photo,
                                                            '(‚ï•Ôπè‚ï•) ÂëúÂëúÂëúÔΩûÊ£ÄÊµãÂà∞‰Ω†ËøòÊ≤°ÊúâÂä†ÂÖ•Êàë‰ª¨ÁöÑÊòüÈôÖÂ§ßÂÆ∂Â∫≠ÔºÅ\n\nüíñ **ÈúÄË¶ÅÂÖàÂÅöËøô‰∫õÊâçËÉΩ‰ΩøÁî®ÊòüÁÅµÊúçÂä°Âì¶Ôºö**\n'
                                                            'üåü 1. Âä†ÂÖ•Êàë‰ª¨ÁöÑ **Áæ§ÁªÑ** (Êó•Â∏∏‰∫§ÊµÅ)\n'
                                                            'üåü 2. ÂÖ≥Ê≥®Êàë‰ª¨ÁöÑ **È¢ëÈÅì** (ÈáçË¶ÅÈÄöÁü•)\n\n'
                                                            '‚ú® Âä†ÂÖ•ÂêéÂÜçÊù•ÊâæÊòüÁÅµÔºåÊàë‰ºö‰∏∫‰Ω†ÂºÄÂêØ‰∏ìÂ±ûÁöÑÊòüÈôÖË¥¶Êà∑ÔΩû(‡πë‚Ä¢ÃÄ„ÖÇ‚Ä¢ÃÅ)Ÿà‚úß',
                                                            judge_group_ikb))
    elif await user_in_group_filter(_, call):
        await callAnswer(call, '‚≠ï ÊòüÁÅµÊ≠£Âú®ÊñΩÊ≥ï‰∏≠...', True)
